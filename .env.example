# =============================================================================
# PORTFOLIO DASHBOARD - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# Generate JWT secrets with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# -----------------------------------------------------------------------------
# Container/Image Configuration
# -----------------------------------------------------------------------------
# Set to "true" to use locally loaded images (for corporate networks/Bangalore)
# Leave empty or set to "false" to pull from Docker Hub (default for cloud)
USE_LOCAL_IMAGES=

# -----------------------------------------------------------------------------
# Node Environment
# -----------------------------------------------------------------------------
NODE_ENV=development
# Options: development, production, test

# -----------------------------------------------------------------------------
# Database Configuration (PostgreSQL)
# -----------------------------------------------------------------------------
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_password_here_change_in_production
POSTGRES_DB=portfolio
DB_HOST=localhost
DB_PORT=5434

# Prisma Database URL (auto-constructed from above values)
DATABASE_URL=postgresql://postgres:your_secure_password_here_change_in_production@localhost:5434/portfolio?schema=public

# Database Resource Limits (for local containerized setup)
DB_MEMORY_LIMIT=512M
DB_CPU_LIMIT=1

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
# Leave empty if Redis authentication is disabled (default for local dev)

# -----------------------------------------------------------------------------
# Backend (NestJS) Configuration
# -----------------------------------------------------------------------------
BACKEND_PORT=3001

# -----------------------------------------------------------------------------
# Frontend (Next.js) Configuration
# -----------------------------------------------------------------------------
FRONTEND_PORT=3000
FRONTEND_URL=http://localhost:3000

# API URL - exposed to browser via NEXT_PUBLIC_ prefix
NEXT_PUBLIC_API_URL=http://localhost:3001/api

# -----------------------------------------------------------------------------
# JWT Authentication
# -----------------------------------------------------------------------------
# SECURITY: Generate secure secrets using crypto.randomBytes(64)
# Example: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=generate_a_secure_random_64_character_hex_string_here_using_crypto_module
JWT_EXPIRATION=15m
# Format examples: 60 (seconds), 5m, 1h, 7d

# Refresh Token Configuration (recommended for production)
JWT_REFRESH_SECRET=generate_a_different_secure_random_hex_string_for_refresh_tokens
JWT_REFRESH_EXPIRATION=7d

# -----------------------------------------------------------------------------
# Optional: Custom Volume Paths
# -----------------------------------------------------------------------------
# Uncomment to use local file system paths instead of Docker volumes
# DB_VOLUME_PATH=./data/postgres
# REDIS_VOLUME_PATH=./data/redis

# -----------------------------------------------------------------------------
# Optional: CORS Configuration
# -----------------------------------------------------------------------------
# CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# -----------------------------------------------------------------------------
# Optional: Logging
# -----------------------------------------------------------------------------
# LOG_LEVEL=debug
# Options: error, warn, info, debug, verbose

# -----------------------------------------------------------------------------
# CI/CD Environment Variables (automatically set by CI/CD platforms)
# -----------------------------------------------------------------------------
# CI=
# VERCEL=
# VERCEL_ENV=
# VERCEL_URL=

# =============================================================================
# QUICK START INSTRUCTIONS
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Generate JWT secrets: npm run env:generate-jwt
# 3. Update POSTGRES_PASSWORD with a secure password
# 4. Update JWT_SECRET and JWT_REFRESH_SECRET with generated values
# 5. For local development with loaded images, set USE_LOCAL_IMAGES=true
# 6. Start containers: npm run podman:all:up
# 7. Generate Prisma client: npm run db:generate
# 8. Run migrations: npm run db:migrate
# 9. Start development: npm run dev
